This reading was more specific to programming in general I felt. I found the section on orthogonality to be helpful and educational because, while I think that everyone knows that too much overlap in a project is dangerous, it was good to have an outline as to how to accomplish that. The same for the idea of duplication. While I don't think that anyone would purposefully choose to duplicate code and make things harder for themselves, there is a degree of "laziness" that sometimes allows this to happen. By reading about how to avoid it, I am more aware of when it could happen and how to try to avoid it. Finally, the idea of estimation, especially in both time it takes to do something and the way that it should be done, along with prototyping seemed important. I liked to see it laid out that, while there is eventually a more complex solution that will need to be implemented, starting vague can indeed be helpful.
One area that I thoroughly confused about was the idea of tracer bullets. I don't have any specific questions because, honestly, I could not follow most of that section at all. I couldn't figure out what a tracer bullet was or how it tied into these sort of clean code and processing areas that were being addressed in this chapter. 
